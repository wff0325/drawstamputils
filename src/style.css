/* 保留你现有的 :root, a, body (初始部分) */
:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 2.2em; /* 为移动端优先调整，后续会增大 */
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

.card {
  padding: 1.5em; /* 为移动端略微减小 */
}

#app {
  background-color: #d8ae8c;
  flex: 1;
  padding: 1rem; /* 为移动端减小内边距 */
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%; /* 确保 #app 占据全部宽度 */
  box-sizing: border-box; /* 包含 padding 和 border 在宽度内 */
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

/* --- 响应式布局从这里开始 --- */

/* 容器样式 (移动端优先) */
.container {
  border-radius: 12px;
  background-color: #f8f9fa;
  flex: 1; /* 占据 #app 中的可用空间 */
  width: 100%; /* 移动端全宽 */
  max-width: 1400px; /* 可选: 超大屏幕的最大宽度 */
  display: flex;
  flex-direction: column; /* 移动端垂直堆叠元素 */
  align-items: center; /* 如果子元素比容器窄，则居中它们 */
  overflow: hidden; /* 如果需要，保留此项 */
  padding: 10px; /* 为移动端添加一些内边距 */
  box-sizing: border-box;
}

/* 编辑器控制面板样式 (移动端优先) */
.editor-controls {
  /* height: 80vh; 移除移动端的固定高度，让内容决定，或使用 max-height */
  max-height: 70vh; /* 示例: 允许滚动但不要固定占据整个屏幕 */
  width: 100%; /* 移动端全宽 */
  max-width: 450px; /* 这样在稍大的“移动”屏幕上不会过宽 */
  padding: 15px; /* 减小内边距 */
  background-color: #f5f5f5;
  overflow-y: auto; /* 改为 auto，需要时滚动 */
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: 15px;
  scrollbar-width: thin;
  scrollbar-color: #888 #f5f5f5;
  margin-bottom: 1rem; /* 堆叠项目之间的间距 */
  border-radius: 8px; /* 堆叠时增加圆角以保持一致性 */
}
/* 保留滚动条样式 */
.editor-controls::-webkit-scrollbar { width: 8px; }
.editor-controls::-webkit-scrollbar-track { background: #f5f5f5; }
.editor-controls::-webkit-scrollbar-thumb { background: #888; border-radius: 4px; }
.editor-controls::-webkit-scrollbar-thumb:hover { background: #666; }


/* Canvas 容器样式 (移动端优先) */
.canvas-container {
  background-color: #f8f9fa; /* 或透明，如果 .container 已有背景 */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 10px; /* 减小内边距 */
  overflow: hidden;
  width: 100%; /* 占据可用全宽 */
  margin-bottom: 1rem; /* 堆叠项目之间的间距 */
  border-radius: 8px; /* 增加圆角 */
}

canvas {
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  border-radius: 8px;
  background-color: white;
  max-width: 100%; /* 关键: 实现响应式 */
  height: auto;    /* 关键: 保持宽高比 */
}

/* 模板面板样式 (移动端优先) */
.template-panel {
  width: 100%; /* 移动端全宽 */
  max-width: 450px; /* 类似于 .editor-controls */
  background: #fff;
  border-left: none; /* 堆叠时不需要左边框 */
  display: flex;
  flex-direction: column;
  /* height: 80vh; 移除固定高度 */
  max-height: 70vh; /* 示例 max-height */
  overflow-y: auto; /* 需要时滚动 */
  border-radius: 8px;
}


/* ---- 平板样式 (例如: 屏幕 >= 768px) ---- */
@media (min-width: 768px) {
  #app {
    padding: 2rem; /* 恢复或调整内边距 */
  }

  h1 {
    font-size: 2.8em;
  }

  .card {
    padding: 2em;
  }

  .container {
    flex-direction: row; /* 并排布局 */
    flex-wrap: wrap; /* 如果空间不足，允许换行 */
    justify-content: center; /* 如果项目未填满行，则居中 */
    padding: 20px; /* 恢复内边距 */
    gap: 20px; /* flex 项目之间的间距 */
  }

  .editor-controls {
    width: 280px; /* 侧边栏的固定宽度 */
    height: 80vh; /* 恢复滚动面板的固定高度 */
    margin-bottom: 0; /* 并排时无外边距 */
    max-width: none; /* 移除移动端的 max-width */
  }

  .canvas-container {
    flex: 1; /* 允许画布区域增长并占据可用空间 */
    padding: 20px; /* 恢复内边距 */
    margin-bottom: 0;
    /* min-width: 300px; /* 可选: 确保画布不会被过度挤压 */
  }

  .template-panel {
    width: 250px; /* 侧边栏的固定宽度 */
    height: 80vh; /* 恢复固定高度 */
    border-left: 1px solid #eee; /* 恢复边框 */
    max-width: none; /* 移除移动端的 max-width */
  }

  /* 如果需要，为稍宽的屏幕调整按钮组 */
  .button-group {
    /* grid-template-columns: repeat(auto-fit, minmax(80px, 1fr)); /* 示例调整 */
  }
}

/* ---- 桌面样式 (例如: 屏幕 >= 1024px 或 1200px) ---- */
@media (min-width: 1024px) {
  #app {
    padding: 3rem; /* 桌面更大的内边距 */
  }
  
  h1 {
    font-size: 3.2em; /* 恢复原始大小 */
  }

  .container {
    flex-wrap: nowrap; /* 在大屏幕上防止三列布局换行 */
    justify-content: space-between; /* 或 center，取决于期望的对齐方式 */
    /* width: 90%; /* 如果喜欢，也可以使用 100% 宽度配合 max-width */
  }

  .editor-controls {
    width: 350px; /* 如果需要，桌面端可以稍宽一些，或使用原始的 400px */
    /* 原始是 400px, 按需调整 */
  }

  /* .canvas-container 可以保留来自平板样式的 flex: 1 */

  .template-panel {
    width: 300px; /* 恢复原始宽度 */
  }
}

/* --- 针对小屏幕特定组件的调整 --- */

/* 按钮组在小屏幕上可能需要调整 */
.button-group {
  position: sticky;
  top: 0; /* 如果其上方有其他 sticky 元素，需要小心处理 */
  z-index: 1000;
  background-color: white;
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  display: grid;
  /* 按钮组的移动端优先: 更灵活 */
  grid-template-columns: repeat(auto-fit, minmax(90px, 1fr));
  gap: 8px;
}
@media (min-width: 400px) { /* 当有足够空间容纳3列时 */
  .button-group {
    grid-template-columns: repeat(3, 1fr);
  }
}


/* 移动端标签导航 */
.tab-navigation {
  /* position: sticky; top: 60px; /* 这个需要小心管理与其他 sticky 元素的层叠 */
  /* 如果移动端标签过多，考虑水平滚动 */
  overflow-x: auto;
  white-space: nowrap; /* 防止标签按钮自身换行 */
}
.tab-button {
  flex: 0 0 auto; /* 防止 flex-grow, 允许自然宽度或最小宽度 */
  min-width: 80px; /* 示例: 标签的最小宽度 */
}


/* 法律免责声明需要为移动端审阅 */
.legal-disclaimer {
  padding: 10px 15px; /* 调整内边距 */
}
.warning-text h3 {
  font-size: 16px; /* 调整字体大小 */
}
.warning-text p {
  font-size: 13px; /* 调整字体大小 */
}
.warning-icon {
  font-size: 20px; /* 调整图标大小 */
}

/* 法律提示弹窗 */
.legal-dialog {
  padding: 20px;
  /* width: 90% 对移动端友好 */
  /* max-width: 500px 很好 */
}
.legal-dialog h3 {
  font-size: 18px;
}


/* 保留你其余的 CSS (control-group, input 样式等) */
/* 它们主要关于外观，而非布局，所以应该问题不大。 */
/* 如果它们在移动端看起来过于拥挤，请检查其中的字体大小和内边距。 */

/* 示例: 移动端标签的字体大小调整 */
.editor-controls label {
  font-size: 13px; /* 如果需要，移动端可以略小 */
}
.editor-controls input[type='text'],
.editor-controls input[type='number'],
.editor-controls select {
  font-size: 13px; /* 如果需要，移动端可以略小 */
}

/* 你现有的以下样式：
.control-group, .group-header, .control-group:hover,
.control-group h3, .inner-circle-list, .company-list, .stamp-type-list,
.inner-circle-item, .company-item, .stamp-type-item, 及其 hover 效果,
.editor-controls label, input, select, range, checkbox 样式,
.add-button, .delete-button, 各类 header, .template-header, .add-template,
.template-list, .template-item, .template-preview, .template-info, .template-actions,
.delete-template, .tab-navigation (见上方), .tab-button,
.template-category, .legal-disclaimer (见上方), .disclaimer-content,
.warning-icon, .warning-text, .legal-dialog-overlay, .legal-dialog (见上方),
.legal-content, .dialog-buttons, .cancel-button, .confirm-button,
.image-list, .image-item, .image-header, .image-preview
...大部分应保持原样，除非特定元素导致溢出或过大。
*/
